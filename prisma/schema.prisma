generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             String        @id @default(uuid())
  username       String
  passwordHash   String
  onboarded      Boolean       @default(false)
  role           Role          @default(UNAPPROVED)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  user           User?
  createdAt      DateTime      @default(now())
  loginLogs      LoginLog[]
  @@unique([organizationId, username])
}

model User {
  id        String     @id @default(uuid())
  name      String?
  position  String?
  phone     String?
  account   Account    @relation(fields: [accountId], references: [id])
  accountId String     @unique
  medErrors MedError[] @relation("UserMedErrors")
}

model Organization {
  id        String    @id @default(uuid())
  name      String
  accounts  Account[]
  createdAt DateTime  @default(now())
}

model MedError {
  id           String   @id @default(uuid())
  eventDate    DateTime
  description  String
  severity     String
  errorType    String
  subErrorType String
  imageUrl     String?
  reporter     User     @relation("UserMedErrors", fields: [reporterId], references: [id])
  reporterId   String
  createdAt    DateTime @default(now())
}

model LoginLog {
  id             String   @id @default(uuid())
  account        Account  @relation(fields: [accountId], references: [id])
  accountId      String
  organizationId String
  createdAt      DateTime @default(now())
  expiresAt      DateTime
  ip             String?
  userAgent      String?
}

enum Role {
  UNAPPROVED
  USER
  ADMIN
  DEVELOPER
}
